# –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ä–∞–±–æ—Ç—ã —Å –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü–∞–º–∏
# –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∞—Ç—ã
from datetime import datetime

# –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ä–∞–Ω–¥–æ–º–∞
from random import choice

import gspread
from aiogram.types import FSInputFile
from gspread.exceptions import APIError
from loguru import logger
from tenacity import (
    retry,
    retry_if_exception_type,
    stop_after_attempt,
    wait_exponential,
)

from paswords import group_id


# —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, –Ω–∞—á–∏—Å–ª—è–µ—Ç –±–∞–ª–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
@retry(
    stop=stop_after_attempt(3),
    wait=wait_exponential(multiplier=1, max=3),
    retry=retry_if_exception_type((APIError, ConnectionError, TimeoutError)),
)
async def value_plus_one(j):
    try:
        gc = gspread.service_account(filename="pidor-of-the-day-af3dd140b860.json")
        sh = gc.open("bot_statistic")
        worksheet = sh.get_worksheet(0)
        worksheet.update(j, str(int(worksheet.acell(j).value) + 1))
    except gspread.exceptions.APIError as e:
        logger.exception("–û—à–∏–±–∫–∞ –≤ functions_file/value_plus_one", e)


# —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≥—É–≥–ª —Ç–∞–±–ª–∏—Ü—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ
@retry(
    stop=stop_after_attempt(3),
    wait=wait_exponential(multiplier=1, max=3),
    retry=retry_if_exception_type((APIError, ConnectionError, TimeoutError)),
)
async def pstat(cell):
    try:
        gc = gspread.service_account(filename="pidor-of-the-day-af3dd140b860.json")
        sh = gc.open("bot_statistic")
        worksheet = sh.get_worksheet(0)
        d1 = [
            (int(worksheet.acell(f"{cell}1").value), "–§–∏–ª—á"),
            (int(worksheet.acell(f"{cell}2").value), "–ò–≥–æ—Ä—å"),
            (int(worksheet.acell(f"{cell}3").value), "–°–µ—Ä–µ–≥–∞"),
            (int(worksheet.acell(f"{cell}4").value), "–°–∞–Ω—è"),
            (int(worksheet.acell(f"{cell}5").value), "–õ–µ—Ö–∞(Demix)"),
            (int(worksheet.acell(f"{cell}6").value), "–õ–µ—Ö–∞(–§–∏—Ç–∏–ª—å)"),
            (int(worksheet.acell(f"{cell}7").value), "–î–∏–º–∞–Ω"),
            (int(worksheet.acell(f"{cell}8").value), "–ö–∏—Ä—é—Ö–∞ –ø–æ–¥–∫–∞—Å—Ç–µ—Ä"),
            (int(worksheet.acell(f"{cell}9").value), "–ñ–µ–Ω–µ–∫ —Å–ø–∞—Å–∞—Ç–µ–ª—å"),
            (int(worksheet.acell(f"{cell}10").value), "–ñ–µ–Ω–µ–∫ —Å—Ç–∞—Ä—ã–π"),
        ]
        d1_sort = sorted(d1, reverse=True)
        return (f'–†–ï–ô–¢–ò–ù–ì –ü–ò–î–ê–†–ê–°–û–í:\n\n '
                f'1. {d1_sort[0][1]} -----> {d1_sort[0][0]} —Ä–∞–∑(–∞)\n'
                f'2. {d1_sort[1][1]} -----> {d1_sort[1][0]} —Ä–∞–∑(–∞)\n'
                f'3. {d1_sort[2][1]} -----> {d1_sort[2][0]} —Ä–∞–∑(–∞)\n'
                f'4. {d1_sort[3][1]} -----> {d1_sort[3][0]} —Ä–∞–∑(–∞)\n'
                f'5. {d1_sort[4][1]} -----> {d1_sort[4][0]} —Ä–∞–∑(–∞)\n'
                f'6. {d1_sort[5][1]} -----> {d1_sort[5][0]} —Ä–∞–∑(–∞)\n'
                f'7. {d1_sort[6][1]} -----> {d1_sort[6][0]} —Ä–∞–∑(–∞)\n'
                f'8. {d1_sort[7][1]} -----> {d1_sort[7][0]} —Ä–∞–∑(–∞)\n'
                f'9. {d1_sort[8][1]} -----> {d1_sort[8][0]} —Ä–∞–∑(–∞)\n'
                f'10. {d1_sort[9][1]} -----> {d1_sort[9][0]} —Ä–∞–∑(–∞)\n\n'
                f'–î–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–µ—Ç –Ω–∞—à —á–µ–º–ø–∏–æ–Ω {d1_sort[0][1]}! –ï–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–æ–∂–µ—Ç –ø–æ–∑–∞–≤–∏–¥–æ–≤–∞—Ç—å –≠–ª—Ç–æ–Ω –î–∂–æ–Ω –∏ '
                f'–¥—Ä—É–≥–∏–µ –í–µ–ª–∏–∫–∏–µ.\n–ü–æ–∂–µ–ª–∞–µ–º –µ–º—É –∑–¥–æ—Ä–æ–≤—å—è, —É—Å–ø–µ—Ö–æ–≤ –≤ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –Ω–æ–≤—ã–π—Ö –ø–æ–±–µ–¥\n\n'
                f'/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É')
    except gspread.exceptions.APIError as e:
        logger.exception("–û—à–∏–±–∫–∞ –≤ functions_file/pstat", e)


# —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω—É–ª—è—é—â–∞—è –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å –Ω–æ–≤–æ–≥–æ –º–µ—Å—è—Ü–∞
@retry(
    stop=stop_after_attempt(3),
    wait=wait_exponential(multiplier=1, max=3),
    retry=retry_if_exception_type((APIError, ConnectionError, TimeoutError)),
)
async def obnulenie_stat(bot):
    champions = []
    try:
        if datetime.now().day == 1 and datetime.now().month != 1:
            gc = gspread.service_account(filename="pidor-of-the-day-af3dd140b860.json")
            sh = gc.open("bot_statistic")
            worksheet = sh.get_worksheet(0)
            d1 = [
                (int(worksheet.acell("A1").value), "–§–∏–ª—á"),
                (int(worksheet.acell("A2").value), "–ò–≥–æ—Ä—å"),
                (int(worksheet.acell("A3").value), "–°–µ—Ä–µ–≥–∞"),
                (int(worksheet.acell("A4").value), "–°–∞–Ω—è"),
                (int(worksheet.acell("A5").value), "–õ–µ—Ö–∞(Demix)"),
                (int(worksheet.acell("A6").value), "–õ–µ—Ö–∞(–§–∏—Ç–∏–ª—å)"),
                (int(worksheet.acell("A7").value), "–î–∏–º–∞–Ω"),
                (int(worksheet.acell("A8").value), "–ö–∏—Ä—é—Ö–∞ –ø–æ–¥–∫–∞—Å—Ç–µ—Ä"),
                (int(worksheet.acell("A9").value), "–ñ–µ–Ω–µ–∫ —Å–ø–∞—Å–∞—Ç–µ–ª—å"),
                (int(worksheet.acell("A10").value), "–ñ–µ–Ω–µ–∫ —Å—Ç–∞—Ä—ã–π"),
            ]
            d1_sort = sorted(d1, reverse=True)
            cells = worksheet.findall(str(d1_sort[0][0]), in_column=1)
            for cell in cells:
                worksheet.update(
                    f"C{cell.row}", f"{int(worksheet.acell(f'C{cell.row}').value) + 1}"
                )
                champions.append(str(worksheet.acell(f"B{cell.row}").value))
            if len(champions) == 1:
                await bot.send_message(group_id,
                                       f'–ò–¢–û–ì–ò –ú–ï–°–Ø–¶–ê:\n\n'
                                       f'1. {d1_sort[0][1]} -----> {d1_sort[0][0]} —Ä–∞–∑(–∞)\n'
                                       f'2. {d1_sort[1][1]} -----> {d1_sort[1][0]} —Ä–∞–∑(–∞)\n'
                                       f'3. {d1_sort[2][1]} -----> {d1_sort[2][0]} —Ä–∞–∑(–∞)\n'
                                       f'4. {d1_sort[3][1]} -----> {d1_sort[3][0]} —Ä–∞–∑(–∞)\n'
                                       f'5. {d1_sort[4][1]} -----> {d1_sort[4][0]} —Ä–∞–∑(–∞)\n'
                                       f'6. {d1_sort[5][1]} -----> {d1_sort[5][0]} —Ä–∞–∑(–∞)\n'
                                       f'7. {d1_sort[6][1]} -----> {d1_sort[6][0]} —Ä–∞–∑(–∞)\n'
                                       f'8. {d1_sort[7][1]} -----> {d1_sort[7][0]} —Ä–∞–∑(–∞)\n'
                                       f'9. {d1_sort[8][1]} -----> {d1_sort[8][0]} —Ä–∞–∑(–∞)\n'
                                       f'10. {d1_sort[9][1]} -----> {d1_sort[9][0]} —Ä–∞–∑(–∞)\n\n'

                                       f'–î–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–µ—Ç –Ω–∞—à —á–µ–º–ø–∏–æ–Ω –º–µ—Å—è—Ü–∞ {d1_sort[0][1]}üéâüéâüéâ! –í —Ç—è–∂–µ–ª–µ–π—à–µ–π –±–æ—Ä—å–±–µ '
                                       f'–æ–Ω —Ç–∞–∫–∏ –≤—ã—Ä–≤–∞–ª —Å–≤–æ—é –∑–∞—Å–ª—É–∂–µ–Ω–Ω—É—é –ø–æ–±–µ–¥—É.'
                                       f'–ü–æ–∂–µ–ª–∞–µ–º –µ–º—É –∑–¥–æ—Ä–æ–≤—å—è, —É—Å–ø–µ—Ö–æ–≤ –≤ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥.')
            else:
                await bot.send_message(group_id,
                                       f'–ò–¢–û–ì–ò –ú–ï–°–Ø–¶–ê:\n\n'
                                       f'1. {d1_sort[0][1]} -----> {d1_sort[0][0]} —Ä–∞–∑(–∞)\n'
                                       f'2. {d1_sort[1][1]} -----> {d1_sort[1][0]} —Ä–∞–∑(–∞)\n'
                                       f'3. {d1_sort[2][1]} -----> {d1_sort[2][0]} —Ä–∞–∑(–∞)\n'
                                       f'4. {d1_sort[3][1]} -----> {d1_sort[3][0]} —Ä–∞–∑(–∞)\n'
                                       f'5. {d1_sort[4][1]} -----> {d1_sort[4][0]} —Ä–∞–∑(–∞)\n'
                                       f'6. {d1_sort[5][1]} -----> {d1_sort[5][0]} —Ä–∞–∑(–∞)\n'
                                       f'7. {d1_sort[6][1]} -----> {d1_sort[6][0]} —Ä–∞–∑(–∞)\n'
                                       f'8. {d1_sort[7][1]} -----> {d1_sort[7][0]} —Ä–∞–∑(–∞)\n'
                                       f'9. {d1_sort[8][1]} -----> {d1_sort[8][0]} —Ä–∞–∑(–∞)\n'
                                       f'10. {d1_sort[9][1]} -----> {d1_sort[9][0]} —Ä–∞–∑(–∞)\n\n'
                                       f'–î–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É—é—Ç –Ω–∞—à–∏ —á–µ–º–ø–∏–æ–Ω—ã –º–µ—Å—è—Ü–∞ {", ".join(champions)}! –í —Ç—è–∂–µ–ª–µ–π—à–µ–π –±–æ—Ä—å–±–µ '
                                       f'–æ–Ω–∏ —Ç–∞–∫–∏ –≤—ã—Ä–≤–∞–ª–∏ —Å–≤–æ—é –∑–∞—Å–ª—É–∂–µ–Ω–Ω—É—é –ø–æ–±–µ–¥—É.\n'
                                       f'–ü–æ–∂–µ–ª–∞–µ–º –∏–º –∑–¥–æ—Ä–æ–≤—å—è, —É—Å–ø–µ—Ö–æ–≤ –≤ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥.\n')
            worksheet.update(
                "A1:A10", [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]
            )
        elif datetime.now().day == 31 and datetime.now().month == 12:
            await bot.send_message(group_id,
                                   "üö®üö®üö®–í–Ω–∏–º–∞–Ω–∏–µ!üö®üö®üö® –ü–∏–¥—Ä –ö–ª–∞—É—Å –ø–æ–¥–≤–æ–¥–∏—Ç –∏—Ç–æ–≥–∏...\n"
                                   "–ö—Ç–æ –∂–µ —Å—Ç–∞–Ω–µ—Ç –ø–∏–¥–∞—Ä–æ–º –≥–æ–¥–∞?",
            )
            file = FSInputFile(r"gif_mr.Bin.mp4", "rb")
            await bot.send_video(group_id, file)
            gc = gspread.service_account(filename="pidor-of-the-day-af3dd140b860.json")
            sh = gc.open("bot_statistic")
            worksheet = sh.get_worksheet(0)
            d1 = [
                (int(worksheet.acell("C1").value), "–§–∏–ª—á"),
                (int(worksheet.acell("C2").value), "–ò–≥–æ—Ä—å"),
                (int(worksheet.acell("C3").value), "–°–µ—Ä–µ–≥–∞"),
                (int(worksheet.acell("C4").value), "–°–∞–Ω—è"),
                (int(worksheet.acell("C5").value), "–õ–µ—Ö–∞(Demix)"),
                (int(worksheet.acell("C6").value), "–õ–µ—Ö–∞(–§–∏—Ç–∏–ª—å)"),
                (int(worksheet.acell("C7").value), "–î–∏–º–∞–Ω"),
                (int(worksheet.acell("C8").value), "–ö–∏—Ä—é—Ö–∞ –ø–æ–¥–∫–∞—Å—Ç–µ—Ä"),
                (int(worksheet.acell("C9").value), "–ñ–µ–Ω–µ–∫ —Å–ø–∞—Å–∞—Ç–µ–ª—å"),
                (int(worksheet.acell("C10").value), "–ñ–µ–Ω–µ–∫ —Å—Ç–∞—Ä—ã–π"),
            ]
            d1_sort = sorted(d1, reverse=True)
            cells = worksheet.findall(str(d1_sort[0][0]), in_column=3)
            for cell in cells:
                worksheet.update(
                    f"D{cell.row}", f"{int(worksheet.acell(f'D{cell.row}').value) + 1}"
                )
                champions.append(str(worksheet.acell(f"B{cell.row}").value))
            if len(champions) == 1:
                await bot.send_message(group_id,
                                       f"üçæüçæüçæ–∏–∏.. –∏–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è {d1_sort[0][1]}! –°–∞–º—ã–π –≥–ª–∞–≤–Ω—ã–π –ø–∏–¥—Ä–∏–ª–∞ —á–µ—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ"
                                       f" –ø–∏–¥–∞—Ä—Å–∫–æ–≥–æ –≥–æ–¥–∞!!! {d1_sort[0][1]} –ø—Ä–∏–π–º–∏ –Ω–∞—à–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ "
                                       f'–æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ –∞–º–±–∞—Å—Å–∞–¥–æ—Ä—Å—Ç–≤—É "–ì–æ–ª—É–±–æ–π —É—Å—Ç—Ä–∏—Ü—ã". –ù–∞ –±–ª–∏–∂–∞–π—à–∏–π –≥–æ–¥ '
                                       f"–Ω–∞ –≤—Å–µ—Ö –Ω–∞—à–∏—Ö —Ç—É—Å–æ–≤–∫–∞—Ö —Ç—ã –Ω–∞ —Ä–∞–∑–ª–∏–≤–µ –∏–±–æ –±–æ–ª—å—à–µ –≤—Å–µ—Ö –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω –ø–æ—Å–∫–æ—Ä–µ–µ "
                                       f"—Å–ø–æ–∏—Ç—å –ø–∞—Ü–∞–Ω–æ–≤. –¢–µ–±–µ —Ç–∞–∫–∂–µ –ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –¥–µ–Ω–µ–∂–Ω—ã–π –ø—Ä–∏–∑ –≤ —Ä–∞–∑–º–µ—Ä–µ –≤—Å–µ—Ö –¥–µ–Ω–µ–≥ "
                                       f"–Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –≤ –Ω–∞—à–µ–º —Ñ–æ–Ω–¥–µ (–≤ —Å–ª—É—á–∞–µ –∏—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤–æ–∑–º–µ—â–∞–µ–º –≥–ª—É–±–æ–∫–∏–º "
                                       f"—É–≤–∞–∂–µ–Ω–∏–µ–º. –•–æ—Ä–æ—à–µ–≥–æ –Ω–æ–≤–æ–≥–æ –≥–æ–¥–∞ –≤ –Ω–æ–≤–æ–º —Å—Ç–∞—Ç—É—Å–µ!",
                )
                await bot.send_message(group_id,
                                       f'–ò–¢–û–ì–ò –ì–û–î–ê:\n\n'
                                       f'1. {d1_sort[0][1]} -----> {d1_sort[0][0]} —Ä–∞–∑(–∞) üéâüéâüéâ\n'
                                       f'2. {d1_sort[1][1]} -----> {d1_sort[1][0]} —Ä–∞–∑(–∞)\n'
                                       f'3. {d1_sort[2][1]} -----> {d1_sort[2][0]} —Ä–∞–∑(–∞)\n'
                                       f'4. {d1_sort[3][1]} -----> {d1_sort[3][0]} —Ä–∞–∑(–∞)\n'
                                       f'5. {d1_sort[4][1]} -----> {d1_sort[4][0]} —Ä–∞–∑(–∞)\n'
                                       f'6. {d1_sort[5][1]} -----> {d1_sort[5][0]} —Ä–∞–∑(–∞)\n'
                                       f'7. {d1_sort[6][1]} -----> {d1_sort[6][0]} —Ä–∞–∑(–∞)\n'
                                       f'8. {d1_sort[7][1]} -----> {d1_sort[7][0]} —Ä–∞–∑(–∞)\n'
                                       f'9. {d1_sort[8][1]} -----> {d1_sort[8][0]} —Ä–∞–∑(–∞)\n'
                                       f'10. {d1_sort[9][1]} -----> {d1_sort[9][0]} —Ä–∞–∑(–∞)\n\n'
                                       f'–î–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–µ—Ç –Ω–∞—à –ü–ò–î–ê–†–ê–° –≥–æ–¥–∞ {d1_sort[0][1]}! –í —Ç—è–∂–µ–ª–µ–π—à–µ–π –±–æ—Ä—å–±–µ –æ–Ω —Ç–∞–∫–∏ –≤—ã—Ä–≤–∞–ª —Å–≤–æ—é –∑–∞—Å–ª—É–∂–µ–Ω–Ω—É—é –ø–æ–±–µ–¥—É.\n'
                                       f'–ü–æ–∂–µ–ª–∞–µ–º –µ–º—É –∑–¥–æ—Ä–æ–≤—å—è, —É—Å–ø–µ—Ö–æ–≤ –≤ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥.\n')
                await bot.send_message(group_id, "–ó–∞ —Ç–æ–±–æ–π –ø—Ä–∏–µ—Ö–∞–ª–∏..")
                file = FSInputFile(r"gif_zverev.mp4", "rb")
                await bot.send_video(group_id, file)
            else:
                await bot.send_message(group_id,
                                       f"üçæüçæüçæ–∏–∏.. –∏–º–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è {', '.join(champions)}! –í—ã–¥–∞—é—â–∏–µ—Å—è –ø–∏–¥—Ä–∏–ª—ã —á–µ—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ"
                                       f" –ø–∏–¥–∞—Ä—Å–∫–æ–≥–æ –≥–æ–¥–∞!!! {', '.join(champions)} –ø—Ä–∏–π–º–∏—Ç–µ –Ω–∞—à–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ "
                                       f'–æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ –∞–º–±–∞—Å—Å–∞–¥–æ—Ä—Å—Ç–≤—É "–ì–æ–ª—É–±–æ–π —É—Å—Ç—Ä–∏—Ü—ã". –ù–∞ –±–ª–∏–∂–∞–π—à–∏–π –≥–æ–¥ '
                                       f"–Ω–∞ –≤—Å–µ—Ö –Ω–∞—à–∏—Ö —Ç—É—Å–æ–≤–∫–∞—Ö –≤—ã –Ω–∞ —Ä–∞–∑–ª–∏–≤–µ –∏–±–æ –±–æ–ª—å—à–µ –≤—Å–µ—Ö –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã –ø–æ—Å–∫–æ—Ä–µ–µ "
                                       f"—Å–ø–æ–∏—Ç—å –ø–∞—Ü–∞–Ω–æ–≤. –í–∞–º —Ç–∞–∫–∂–µ –ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –¥–µ–Ω–µ–∂–Ω—ã–π –ø—Ä–∏–∑ –≤ —Ä–∞–∑–º–µ—Ä–µ –≤—Å–µ—Ö –¥–µ–Ω–µ–≥ "
                                       f"–Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö –≤ –Ω–∞—à–µ–º —Ñ–æ–Ω–¥–µ (–≤ —Å–ª—É—á–∞–µ –∏—Ö –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –≤–æ–∑–º–µ—â–∞–µ–º –≥–ª—É–±–æ–∫–∏–º "
                                       f"—É–≤–∞–∂–µ–Ω–∏–µ–º. –•–æ—Ä–æ—à–µ–≥–æ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞ –≤ –Ω–æ–≤–æ–º —Å—Ç–∞—Ç—É—Å–µ!")
                await bot.send_message(group_id,
                                       f'–ò–¢–û–ì–ò –ì–û–î–ê:\n\n'
                                       f'1. {d1_sort[0][1]} -----> {d1_sort[0][0]} —Ä–∞–∑(–∞)\n'
                                       f'2. {d1_sort[1][1]} -----> {d1_sort[1][0]} —Ä–∞–∑(–∞)\n'
                                       f'3. {d1_sort[2][1]} -----> {d1_sort[2][0]} —Ä–∞–∑(–∞)\n'
                                       f'4. {d1_sort[3][1]} -----> {d1_sort[3][0]} —Ä–∞–∑(–∞)\n'
                                       f'5. {d1_sort[4][1]} -----> {d1_sort[4][0]} —Ä–∞–∑(–∞)\n'
                                       f'6. {d1_sort[5][1]} -----> {d1_sort[5][0]} —Ä–∞–∑(–∞)\n'
                                       f'7. {d1_sort[6][1]} -----> {d1_sort[6][0]} —Ä–∞–∑(–∞)\n'
                                       f'8. {d1_sort[7][1]} -----> {d1_sort[7][0]} —Ä–∞–∑(–∞)\n'
                                       f'9. {d1_sort[8][1]} -----> {d1_sort[8][0]} —Ä–∞–∑(–∞)\n'
                                       f'10. {d1_sort[9][1]} -----> {d1_sort[9][0]} —Ä–∞–∑(–∞)\n\n'
                                       f'–î–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–µ—Ç –Ω–∞—à–∏ –ü–ò–î–ê–†–ê–°—ã –≥–æ–¥–∞ {", ".join(champions)}üéâüéâüéâ! –í —Ç—è–∂–µ–ª–µ–π—à–µ–π'
                                       f' –±–æ—Ä—å–±–µ –æ–Ω–∏ —Ç–∞–∫–∏ –≤—ã—Ä–≤–∞–ª–∏ —Å–≤–æ—é –∑–∞—Å–ª—É–∂–µ–Ω–Ω—É—é\n'
                                       f'–ø–æ–±–µ–¥—É. –ü–æ–∂–µ–ª–∞–µ–º –∏–º –∑–¥–æ—Ä–æ–≤—å—è, —É—Å–ø–µ—Ö–æ–≤ –≤ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω–∏ –∏ –Ω–æ–≤—ã—Ö –ø–æ–±–µ–¥.\n'
                                                )
                await bot.send_message(group_id, "–ó–∞ –≤–∞–º–∏ –ø—Ä–∏–µ—Ö–∞–ª–∏..")
                file = FSInputFile(r"gif_zverev.mp4", "rb")
                await bot.send_video(group_id, file)
            worksheet.update(
                "A1:A10", [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]
            )
            worksheet.update(
                "C1:C10", [[0], [0], [0], [0], [0], [0], [0], [0], [0], [0]]
            )
    except gspread.exceptions.APIError as e:
        logger.exception("–û—à–∏–±–∫–∞ –≤ functions_file/obnulenie_stat", e)


async def celebrate_day():
    if datetime.now().day == 31 and datetime.now().month == 12:
        return "üéâ–ù–æ–≤–æ–≥–æ–¥–Ω–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ"
    elif datetime.now().day == 7 and datetime.now().month == 1:
        return "üéâ–†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ"
    elif datetime.now().day == 14 and datetime.now().month == 1:
        return "üéâ–°—Ç–∞—Ä–æ–Ω–æ–≤–æ–≥–æ–¥–Ω–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ"
    elif datetime.now().day == 14 and datetime.now().month == 2:
        return "üéâ–õ–∏—á–Ω—ã–º –ø–∏–¥–∞—Ä–∞—Å–æ–º –í–∞–ª–µ–Ω—Ç–∏–Ω–∞üéâ"
    elif datetime.now().day == 23 and datetime.now().month == 2:
        return "üéâ–ó–∞—â–∏—â–µ–Ω–Ω—ã–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ"
    elif datetime.now().day == 1 and datetime.now().month == 3:
        return "üéâ–í–µ—Å–µ–Ω–Ω–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ"
    elif datetime.now().day == 8 and datetime.now().month == 3:
        return "üéâ–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –∂–µ–Ω—Å–∫–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ"
    elif datetime.now().day == 1 and datetime.now().month == 5:
        return "üéâ–ú–∏—Ä–Ω—ã–º —Ç—Ä—É–¥–æ–ª—é–±–∏–≤—ã–º –∏ –º–∞–π—Å–∫–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ"
    elif datetime.now().day == 1 and datetime.now().month == 6:
        return "üéâ–õ–µ—Ç–Ω–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ"
    elif datetime.now().day == 1 and datetime.now().month == 9:
        return "üéâ–®–∫–æ–ª—å–Ω—ã–º –æ—Å–µ–Ω–Ω–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ"
    elif datetime.now().day == 4 and datetime.now().month == 11:
        return "üéâ–ù–∞—Ä–æ–¥–Ω—ã–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ"
    elif datetime.now().day == 1 and datetime.now().month == 12:
        return "üéâ–ó–∏–º–Ω–∏–º –ø–∏–¥–∞—Ä–∞—Å–æ–ºüéâ"
    else:
        return "–ü–∏–¥–∞—Ä–∞—Å–æ–º –¥–Ω—è"


# —Ñ—É–Ω–∫—Ü–∏—è —à–∞—Ä–∞ —Å—É–¥—å–±—ã
async def ball_of_fate():
    ball_choice = choice([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])
    if ball_choice == 1:
        ball_answer = FSInputFile(r"ball/var_one.png", "rb")
        return ball_answer
    elif ball_choice == 2:
        ball_answer = FSInputFile(r"ball/var_two.png", "rb")
        return ball_answer
    elif ball_choice == 3:
        ball_answer = FSInputFile(r"ball/var_tree.png", "rb")
        return ball_answer
    elif ball_choice == 4:
        ball_answer = FSInputFile(r"ball/var_four.png", "rb")
        return ball_answer
    elif ball_choice == 5:
        ball_answer = FSInputFile(r"ball/var_five.png", "rb")
        return ball_answer
    elif ball_choice == 6:
        ball_answer = FSInputFile(r"ball/var_six.png", "rb")
        return ball_answer
    elif ball_choice == 7:
        ball_answer = FSInputFile(r"ball/var_seven.png", "rb")
        return ball_answer
    elif ball_choice == 8:
        ball_answer = FSInputFile(r"ball/var_eight.png", "rb")
        return ball_answer
    elif ball_choice == 9:
        ball_answer = FSInputFile(r"ball/var_nine.png", "rb")
        return ball_answer
    elif ball_choice == 10:
        ball_answer = FSInputFile(r"ball/var_ten.png", "rb")
        return ball_answer
    elif ball_choice == 11:
        ball_answer = FSInputFile(r"ball/var_eleven.png", "rb")
        return ball_answer
